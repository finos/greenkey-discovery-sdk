---
entities:
  one_through_seven:
    - a
    - an
    - one
    - two
    - three
    - four
    - five
    - six
    - seven
  denominator:
    - quarter
    - quarters
    - fourth
    - fourths
    - half
    - eighth
    - eighths
    - eights
  # used for par_num (e.g. 'par seven')
  one_through_nine:
    - "@one_through_seven"
    - eight
    - nine
    # needed for 'Nine' output
    - formatting: "entity.lower()"
  doubles:
    - doubles -> 55
  par:
    - par -> one hundred
  par_num:
    - "@par @one_through_nine?"
    - formatting: custom/format_par.py
  numthree:
    - "(@num{1,3}|@doubles)"
    - spacer: ''
    - validation: "len(entity) > 1"
  numfive:
    - "@num{1,5}"
    - spacer: ''
  and:
    - "and"
  spot:
    - "spot"
    - "point"
  frac_num:
    - "(@numfive|@par_num) (@and @one_through_seven? @denominator)?"
    - formatting: custom/format_fraction.py
  float_num:
    - "(@numfive|@par_num) (@spot (@numfive|@doubles))?"
    - spacer: ''
    - formatting: "entity.replace('spot', '.').replace('point', '.').replace(' ', '')"
  # IG_BONDS specific stuff
  cbond_product:
    - file: "custom/cbonds_products.txt"
  upcoming_year:
    - "(@num_plur2|@numfive)"
    - validation: "int(entity) > 17 and int(entity) < 30"
  coupon:
    - "(@float_num|@frac_num)"
    - validation: "float(entity) > 0 and float(entity) < 20"
  instrument:
    - "@cbond_product @coupon? @upcoming_year?"
    - spacing_threshold: 4
  num_plur2:
    - "@num_plural{1,2}"
  wholepart:
    - "(@numfive|@par_num)"
    - spacer: ''
    - validation: "int(entity) > 80 and int(entity) < 121"
  price1_vague:
    - "@wholepart @numthree"
    - spacer: '.'
  price2_vague:
    - "@wholepart @numthree"
    - spacer: '.'
  price1:
    - "(@float_num|@frac_num)"
    - spacer: ''
    # assuming price is +/- 20% of 100
    - validation: "float(entity) > 80 and float(entity) < 121"
  price2:  # entity_requirements is needed. req: cbond_product, price1
    - "(@float_num|@frac_num)"
    # assuming price is +/- 20% of 100
    - validation: "float(entity) > 80 and float(entity) < 121"
intents:
  cbond:
    domain: "quotes_2.0"
    skip_training: true
    examples:
      - "i have a @instrument for @price1 @price2?"
      - "i have a @instrument for @price1_vague @price2?"
      - "i have a @instrument for @price1 @price2_vague?"
      - "i have a @instrument for @price1_vague @price2_vague?"
      - "i have a @instrument for @price1 @numthree?"
      - "i have a @instrument for @price1_vague @numthree?"
    entity_patterns:
      - ["instrument", "price1"]
      - ["instrument", "price1", "price2"]
      - ["instrument", "price1_vague", "price2"]
      - ["instrument", "price1", "price2_vague"]
      - ["instrument", "price1_vague", "price2_vague"]
      - ["instrument", "price1", "numthree"]
      - ["instrument", "price1_vague", "numthree"]
    structure_enforcement: true
    schema:
      return_json:
        im_string: "@instrument @price1 / @price2"
        product: "@instrument"
        product_details:
          ticker: " "
          coupon: " "
          maturity: " "
        category: "quote"
        price_list:
          - value: "@price1"
            category: "bid"
            type: " "
          - value: "@price2"
            category: "ask"
            type: " "
    